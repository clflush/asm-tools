#!/bin/sed -f
# -*- sed -*-
#
# Copyright (C) 2013 Eric Schulte
# Licensed under the Gnu Public License Version 3 or later
#
# Instrument an assembly program with assembler isntructions to print
# a full trace of program execution to "trace.out".
#
# - Instrumentation is inserted around every control flow instruction
#   and jump target.
#
# - The output file lists executed labels (TODO: and ASM LOC).
#
# - (TODO: Write .data addresses as they are used.)

1 {
h;
# declare the trac output fd at the top of the file
s/.*/	.comm	__tracer_fd,8,8/;H;
s/.*/	.section	.rodata\
.TRACE0:\
	.string "w"\
.TRACE1:\
	.string "trace.out"/;p;d
}

# Instrument every code label with code to conditionally initialize
# the trace file handle if null, and to then print a trace of the
# label.
#
# NOTE: This relies on gcc outputting labels of the form .L### only
#       for regular code.
/^\.L[0-9]*:/{
s/\.L\([0-9]*\):/.TRACES\1:\
	.string "\1\\n"/;p;
s/^\.TRACES\([0-9]*\):.*\n.*\'/.L\1:\
	pushq	%rax\
	pushq	%rbx\
	pushq	%rcx\
	pushq	%rdx\
	pushq	%rsi\
	pushq	%rdi\
	movq	__tracer_fd(%rip), %rax\
	testq	%rax, %rax\
	jne	.TRACE\1ALREADY\
	movl	$.TRACE0, %esi\
	movl	$.TRACE1, %edi\
	call	fopen\
	movq	%rax, __tracer_fd(%rip)\
.TRACE\1ALREADY:\
	movq	__tracer_fd(%rip), %rax\
	movq	%rax, %rcx\
	movl	__tracer_length\1n, %edx\
	movl	$1, %esi\
	movl	$.TRACES\1, %edi\
	call	fwrite\
	popq	%rdi\
	popq	%rsi\
	popq	%rdx\
	popq	%rcx\
	popq	%rbx\
	popq	%rax/;H;d}

# At the end of the file, write out all of the held data
# (basically the whole file)
${x;
# Calculate the length of the label names.
s/__tracer_length[^,]\{12\},/$12,/g;
s/__tracer_length[^,]\{11\},/$11,/g;
s/__tracer_length[^,]\{10\},/$10,/g;
s/__tracer_length[^,]\{9\},/$9,/g;
s/__tracer_length[^,]\{8\},/$8,/g;
s/__tracer_length[^,]\{7\},/$7,/g;
s/__tracer_length[^,]\{6\},/$6,/g;
s/__tracer_length[^,]\{5\},/$5,/g;
s/__tracer_length[^,]\{4\},/$4,/g;
s/__tracer_length[^,]\{3\},/$3,/g;
s/__tracer_length[^,]\{2\},/$2,/g;
p}

# all unmatched lines are simply held
{H;d}
